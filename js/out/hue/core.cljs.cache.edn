{:rename-macros {}, :renames {}, :externs {Error {}, document {getElementById {}}}, :use-macros {}, :excludes #{}, :name hue.core, :imports nil, :requires {secretary secretary.core, reagent.session reagent.session, session reagent.session, goog.string goog.string, reagent.core reagent.core, r reagent.core, accountant.core accountant.core, goog.string.format goog.string.format, accountant accountant.core, secretary.core secretary.core}, :uses {atom reagent.core}, :defs {generate-shadow {:protocol-inline nil, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 64, :column 7, :end-line 64, :end-column 22, :arglists (quote ([f]))}, :name hue.core/generate-shadow, :variadic false, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :end-column 22, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, mount-root {:protocol-inline nil, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 138, :column 7, :end-line 138, :end-column 17, :arglists (quote ([]))}, :name hue.core/mount-root, :variadic false, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, shadow {:protocol-inline nil, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 61, :column 7, :end-line 61, :end-column 13, :arglists (quote ([colors]))}, :name hue.core/shadow, :variadic false, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :end-column 13, :method-params ([colors]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([colors]))}, templates {:name hue.core/templates, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 55, :column 1, :end-line 55, :end-column 15, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 55, :column 6, :end-line 55, :end-column 15}, :tag cljs.core/IVector}, current-page {:protocol-inline nil, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 123, :column 7, :end-line 123, :end-column 19, :arglists (quote ([]))}, :name hue.core/current-page, :variadic false, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, slider {:protocol-inline nil, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 74, :column 7, :end-line 74, :end-column 13, :arglists (quote ([title a bottom top step]))}, :name hue.core/slider, :variadic false, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :end-column 13, :method-params ([title a bottom top step]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 5, :fn-var true, :arglists (quote ([title a bottom top step]))}, rgba {:protocol-inline nil, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 40, :column 7, :end-line 40, :end-column 11, :arglists (quote ([color a]))}, :name hue.core/rgba, :variadic false, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :end-column 11, :method-params ([color a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([color a]))}, boxes {:protocol-inline nil, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 97, :column 7, :end-line 97, :end-column 12, :arglists (quote ([hue saturation value]))}, :name hue.core/boxes, :variadic false, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :end-column 12, :method-params ([hue saturation value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 3, :fn-var true, :arglists (quote ([hue saturation value]))}, home-page {:protocol-inline nil, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 104, :column 7, :end-line 104, :end-column 16, :arglists (quote ([]))}, :name hue.core/home-page, :variadic false, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init! {:protocol-inline nil, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 141, :column 7, :end-line 141, :end-column 12, :arglists (quote ([]))}, :name hue.core/init!, :variadic false, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, allcolors {:protocol-inline nil, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 47, :column 7, :end-line 47, :end-column 16, :arglists (quote ([hue saturation value alpha number]))}, :name hue.core/allcolors, :variadic false, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :end-column 16, :method-params ([hue saturation value alpha number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 5, :fn-var true, :arglists (quote ([hue saturation value alpha number]))}, saturation {:name hue.core/saturation, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 13, :column 1, :end-line 13, :end-column 16, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 13, :column 6, :end-line 13, :end-column 16}, :tag any}, hsvtorgb {:protocol-inline nil, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 21, :column 7, :end-line 21, :end-column 15, :arglists (quote ([color]))}, :name hue.core/hsvtorgb, :variadic false, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :end-column 15, :method-params ([color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([color]))}, value {:name hue.core/value, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 14, :column 1, :end-line 14, :end-column 11, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 14, :column 6, :end-line 14, :end-column 11}, :tag any}, n {:name hue.core/n, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 15, :column 1, :end-line 15, :end-column 7, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 15, :column 6, :end-line 15, :end-column 7}, :tag any}, box {:protocol-inline nil, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 88, :column 7, :end-line 88, :end-column 10, :arglists (quote ([color]))}, :name hue.core/box, :variadic false, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :end-column 10, :method-params ([color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([color]))}, first-hue {:name hue.core/first-hue, :file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 12, :column 1, :end-line 12, :end-column 15, :meta {:file "/home/charles/code/hue/src/cljs/hue/core.cljs", :line 12, :column 6, :end-line 12, :end-column 15}, :tag any}}, :require-macros {r reagent.core, reagent.core reagent.core, secretary secretary.core, secretary.core secretary.core}, :cljs.analyzer/constants {:seen #{:hue :min :path-exists? :box-shadow :number :font-size :saturation :div#ring2 :ns :name :li home-page :value :div.slider hue.core :file :box :background-color :end-column :width :type :column :style :div :line :max :class :h1#title :end-line :div#ring1 :ul#boxes :dial :input :ul#sliders :arglists :on-change :h3 :doc :nav-handler :step :current-page :test hue.core/home-page :range :span}, :order [:div.slider :h3 :input :type :class :value :max :min :step :on-change :range :dial :span :li :style :box :background-color :width :font-size :div :h1#title :div#ring1 :box-shadow :div#ring2 :ul#sliders :hue :saturation :number :ul#boxes :current-page hue.core/home-page :ns :name :file :end-column :column :line :end-line :arglists :doc :test hue.core home-page :nav-handler :path-exists?]}, :doc nil}